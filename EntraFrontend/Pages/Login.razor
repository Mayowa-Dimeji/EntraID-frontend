@page "/login"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Nav
@inject IConfiguration Configuration

@inject IAccessTokenProvider TokenProvider

<div class="flex flex-col items-center justify-center min-h-screen bg-gray-100 px-4">
    <div class="bg-white p-8 rounded shadow-md w-full max-w-sm">
        <h2 class="text-2xl font-semibold text-center text-gray-800 mb-6">Sign in to Entra Login</h2>

        <button @onclick="LoginWithMicrosoft" class="flex items-center justify-center w-full mb-4 py-2 px-4 border border-gray-300 rounded hover:bg-gray-50">
            <img src="https://img.icons8.com/?size=100&id=22989&format=png&color=000000" alt="Microsoft" class="w-5 h-5 mr-3" />
            <span>Sign in with Microsoft</span>
        </button>

        <button @onclick="LoginWithGoogle" class="flex items-center justify-center w-full mb-4 py-2 px-4 border border-gray-300 rounded hover:bg-gray-50">
            <img src="https://img.icons8.com/?size=100&id=17949&format=png&color=000000" alt="Google" class="w-5 h-5 mr-3" />
            <span>Sign in with Google</span>
        </button>

        <button @onclick="LoginWithEmailOTP" class="flex items-center justify-center w-full py-2 px-4 border border-gray-300 rounded hover:bg-gray-50">
            <img src="https://img.icons8.com/?size=100&id=LPcVDft9Isqt&format=png&color=000000" alt="Email OTP" class="w-5 h-5 mr-3" />
            <span>Sign in with Email (OTP)</span>
        </button>
    </div>
</div>

@code {
    private  string ClientId => Configuration["AzureAd:ClientId"]!;
    private  string TenantId => Configuration["AzureAd:TenantId"]!;
    private  string RedirectUri => Nav.BaseUri + "authentication/login";
    private  string PostLoginRedirect = "/dashboard";

  
    private void RedirectAfterLogin()
    {
        Nav.NavigateTo(PostLoginRedirect, forceLoad: true);
    }

    private void LoginWithMicrosoft()
    {
        var url = $"https://login.microsoftonline.com/{TenantId}/oauth2/v2.0/authorize" +
                  $"?client_id={ClientId}" +
                  $"&response_type=token" +
                  $"&scope=openid%20profile%20email" +
                  $"&redirect_uri={RedirectUri}" +
                  $"&response_mode=fragment" +
                  $"&idp=https://login.microsoftonline.com";

        Nav.NavigateTo(url, forceLoad: true);
        
    }

    private void LoginWithGoogle()
    {
        var url = $"https://login.microsoftonline.com/{TenantId}/oauth2/v2.0/authorize" +
                  $"?client_id={ClientId}" +
                  $"&response_type=token" +
                  $"&scope=openid%20profile%20email" +
                  $"&redirect_uri={RedirectUri}" +
                  $"&response_mode=fragment" +
                  $"&idp=google.com";

        Nav.NavigateTo(url, forceLoad: true);
        
    }

    private void LoginWithEmailOTP()
    {
        var url = $"https://login.microsoftonline.com/{TenantId}/oauth2/v2.0/authorize" +
                  $"?client_id={ClientId}" +
                  $"&response_type=token" +
                  $"&scope=openid%20profile%20email" +
                  $"&redirect_uri={RedirectUri}" +
                  $"&response_mode=fragment" +
                  $"&idp=otc.microsoft.com";

        Nav.NavigateTo(url, forceLoad: true);
        
    }
}
